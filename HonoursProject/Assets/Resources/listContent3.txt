A queue is a data structure that follows the First-In-First-Out (FIFO) principle, which means that the first element added to the queue is the first element to be removed.
The operations commonly associated with a queue are enqueue (add an element to the back of the queue) and dequeue (remove the front element from the queue).
A linked list can be used as the underlying data structure for a queue.
To implement a queue using a linked list, we must define a node class and a queue class that contains pointers to the front and back of the queue.
/Next, the enqueue operation can be implemented by creating a new node and setting its next value to null. Then get the current last node and set its next value to the new node. Finally, set the modified pointer to the new node.
/The dequeue operation can be implemented by getting the first node pointer value and updating it to the next node in the list. The original first node can then be removed from the list.
Let's finalise our understanding of linked lists by looking playing a final game.